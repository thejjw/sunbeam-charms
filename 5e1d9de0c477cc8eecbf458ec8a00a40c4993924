{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e29d91e_dd0c3e9f",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 10366
      },
      "writtenOn": "2025-07-01T23:51:57Z",
      "side": 1,
      "message": "Can you change this to logger.info since not setting annotations is not really an error",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aa5c3ae_2c8ef68b",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 37393
      },
      "writtenOn": "2025-07-02T07:26:53Z",
      "side": 1,
      "message": "This will be only in the context of an error parsing the `loadbalancer_annotations` value, which makes sense to be a `logger.error`",
      "parentUuid": "6e29d91e_dd0c3e9f",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78716766_e8b4377e",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 10366
      },
      "writtenOn": "2025-07-02T07:29:08Z",
      "side": 1,
      "message": "Yes seems error cases gets None for loadbalancer_annotations and {} if config is not set.",
      "parentUuid": "8aa5c3ae_2c8ef68b",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c109b4a_8494fb8e",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 10366
      },
      "writtenOn": "2025-07-01T23:51:57Z",
      "side": 1,
      "message": "Block the charm only if user input fails in the validation logic. If the user does not set the annotations, the charm should still create lb with no annotations",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cb3b13e_01cef019",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 37393
      },
      "writtenOn": "2025-07-02T07:26:53Z",
      "side": 1,
      "message": "In case of `loadbalancer_annotations` being unset or set to `\u0027\u0027`, the charm will not enter blocked state and the Service will be created",
      "parentUuid": "8c109b4a_8494fb8e",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d6e7384_c708724d",
        "filename": "ops-sunbeam/ops_sunbeam/k8s_resource_handlers.py",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 10366
      },
      "writtenOn": "2025-07-02T07:29:08Z",
      "side": 1,
      "message": "Got the logic, mentioned in above comment.",
      "parentUuid": "6cb3b13e_01cef019",
      "revId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Backport-Candidate",
        "description": {
          "value": "Backport candidate status"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5e1d9de0c477cc8eecbf458ec8a00a40c4993924",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}