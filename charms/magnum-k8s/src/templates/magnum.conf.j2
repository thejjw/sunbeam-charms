[DEFAULT]
debug = {{ options.debug }}
lock_path = /var/lock/magnum
state_path = /var/lib/magnum

transport_url = {{ amqp.transport_url }}

{% include "parts/section-database" %}

{% include "parts/section-identity" %}
region_name = {{ options.region }}

[keystone_auth]
auth_section = keystone_authtoken

{% include "parts/section-service-user" %}

{% include "parts/section-trust" %}

[oslo_messaging_notifications]
driver = messaging

# Update region name from relations

[cinder_client]
endpoint_type = adminURL
region_name = {{ options.region }}

[api]
api_paste_config=/etc/magnum/api-paste.ini
workers = 4

[conductor]
workers = 4

{% include "parts/section-oslo-messaging-rabbit" %}

[glance_client]
region_name = {{ options.region }}
{% if receive_ca_cert and receive_ca_cert.ca_bundle -%}
ca_file = /usr/local/share/ca-certificates/ca-bundle.pem
{% endif -%}

[heat_client]
region_name = {{ options.region }}
{% if receive_ca_cert and receive_ca_cert.ca_bundle -%}
ca_file = /usr/local/share/ca-certificates/ca-bundle.pem
{% endif -%}

[neutron_client]
region_name = {{ options.region }}
{% if receive_ca_cert and receive_ca_cert.ca_bundle -%}
ca_file = /usr/local/share/ca-certificates/ca-bundle.pem
{% endif -%}

[nova_client]
region_name = {{ options.region }}
{% if receive_ca_cert and receive_ca_cert.ca_bundle -%}
ca_file = /usr/local/share/ca-certificates/ca-bundle.pem
{% endif -%}

[octavia_client]
region_name = {{ options.region }}
{% if receive_ca_cert and receive_ca_cert.ca_bundle -%}
ca_file = /usr/local/share/ca-certificates/ca-bundle.pem
{% endif -%}

[audit_middleware_notifications]
driver = log

[cluster_template]
kubernetes_allowed_network_drivers = cilium

[capi_helm]
kubeconfig_file = /etc/magnum/kubeconfig
# Empty repo so that helm chart can be downloaded from OCI registry
helm_chart_repo = ""
helm_chart_name = oci://ghcr.io/canonical/charts/openstack-ck8s-cluster
default_helm_chart_version = 0.1.0
api_resources = {"K8sControlPlane": {"api_version": "controlplane.cluster.x-k8s.io/v1beta2", "plural_name": "ck8scontrolplanes"}, "OpenstackCluster": {"api_version": "infrastructure.cluster.x-k8s.io/v1beta1"}}
k8s_control_plane_resource_conditions = MachinesReady,Ready,ControlPlaneComponentsHealthy
