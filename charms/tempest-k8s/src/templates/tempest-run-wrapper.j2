#!/bin/bash
# Do not change this file, this file is managed by juju.

(flock -n 9 || {
    # curly braces are important here, as they retain the same execution environment.
    # we don't want to start a new subshell
    echo "Lock could not be acquired, another test run is in progress."
    exit 1
}

# Clean up any leftover lock files.
# This helps mitigate https://bugs.launchpad.net/tempest/+bug/2052752 ,
# by avoiding accumulation of the credential lock files.
# This cleanup is safe and won't interfere with a running instance of tempest,
# because tempest should only be run within these wrapper scripts,
# and there is locking around these.
rm -rf /tmp/tempest-lock/

# log everything to a tmpfile
TMP_FILE="$(mktemp)"

echo ":: discover-tempest-config" >> "$TMP_FILE"
if discover-tempest-config --test-accounts "$TEMPEST_TEST_ACCOUNTS" --out "$TEMPEST_CONF" >> "$TMP_FILE" 2>&1; then
    echo ":: tempest run" >> "$TMP_FILE"
    tempest run --exclude-list "$TEMPEST_EXCLUDE_LIST" --workspace "$TEMPEST_WORKSPACE" -w "$TEMPEST_CONCURRENCY" "$@" >> "$TMP_FILE" 2>&1
    python3 "$TEMPEST_HOME/cleanup.py"
else
    echo ":: skipping tempest run because discover-tempest-config had errors" >> "$TMP_FILE"
fi

# tempest and discover-tempest-config can output escape sequences,
# so remove them to neaten the output.
sed $'s/\033\[[0-9;]*m//g' -i "$TMP_FILE"

# After everything, move it to the actual output.
# This ensures we don't have issues with logging libs pushing partial files,
# if we were to stream to the final output.
# The `mkdir` is to ensure the tempest workspace directory exists, and the
# temp file can be moved to that directory.
mkdir -p $TEMPEST_WORKSPACE && mv "$TMP_FILE" "$TEMPEST_OUTPUT"

SUMMARY="$(awk '/^Totals$/,/Sum of execute/ { print }' < "$TEMPEST_OUTPUT")"
if [[ -n "$SUMMARY" ]]; then
    echo "$SUMMARY"
else
    echo "Error running the tests, please view the log file"
    exit 1
fi

) 9>/var/lock/tempest
