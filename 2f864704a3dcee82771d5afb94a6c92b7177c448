{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce29701d_22a67633",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 35007
      },
      "writtenOn": "2024-02-01T02:43:48Z",
      "side": 1,
      "message": "Some questions that need clarify, otherwise LGTM",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584570fb_5f83b276",
        "filename": "charms/tempest-k8s/src/charm.py",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 35007
      },
      "writtenOn": "2024-02-01T02:43:48Z",
      "side": 1,
      "message": "I think a cleaner way to validate the schedule is to define this validation logic in `TempestConfigurationContext` class. If the schedule is not valid, you can set the property `ready` to `False` otherwise `True`.",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c503b8a6_317fb04f",
        "filename": "charms/tempest-k8s/src/charm.py",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 34352
      },
      "writtenOn": "2024-02-01T04:13:24Z",
      "side": 1,
      "message": "Hmm I think it\u0027s ready either way - better to disable the checks if it\u0027s an invalid value than refuse to update it.  I guess ready() is more to check if the data it needs is available (eg. waiting on relations, etc.).\n\nI think the schedule logic should stay in the charm too, since it\u0027s a property of the charm, not a property of the templating object.",
      "parentUuid": "584570fb_5f83b276",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74f45790_f7c6845c",
        "filename": "charms/tempest-k8s/src/handlers.py",
        "patchSetId": 15
      },
      "lineNbr": 95,
      "author": {
        "id": 34543
      },
      "writtenOn": "2024-02-01T03:05:44Z",
      "side": 1,
      "message": "nit: with `oneshot` in name it may be confused with ad-hoc check. Maybe change to something more descriptive?",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b85e83_8ab83dc2",
        "filename": "charms/tempest-k8s/src/handlers.py",
        "patchSetId": 15
      },
      "lineNbr": 95,
      "author": {
        "id": 34352
      },
      "writtenOn": "2024-02-01T04:13:24Z",
      "side": 1,
      "message": "Sure, I\u0027ll try something different.  It\u0027s tricky to name, because the service is a oneshot type service.",
      "parentUuid": "74f45790_f7c6845c",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d192253b_832fa73c",
        "filename": "charms/tempest-k8s/src/handlers.py",
        "patchSetId": 15
      },
      "lineNbr": 95,
      "author": {
        "id": 34543
      },
      "writtenOn": "2024-02-01T15:56:42Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "d2b85e83_8ab83dc2",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c7272f1_eafefcab",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 34543
      },
      "writtenOn": "2024-02-01T03:05:44Z",
      "side": 1,
      "message": "I find it logically weird to have checks for both `is_shcedule_valid` and `get_schedule_error` in the charm code when `is_shcedule_valid` depends on the return value of `get_schedule_error`. Can we merge them into a single function and return both a bool for validity and an error message?",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53140791_f922da0f",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 34352
      },
      "writtenOn": "2024-02-01T04:13:24Z",
      "side": 1,
      "message": "It\u0027s neater IMHO to have two separate functions for separate purposes, than returning multiple values.",
      "parentUuid": "7c7272f1_eafefcab",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b89d7889_9ad462ea",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 34543
      },
      "writtenOn": "2024-02-01T15:56:42Z",
      "side": 1,
      "message": "I think it is really weird using whether an error message is empty to determine the validity of the schedule.\n\nBy `return both a bool for validity and an error message` I didn\u0027t mean we should result them as separate value; instead, I was thinking about a single response object. e,g, `{code: 0, err: \"\"}`, like an api response. But after reconsidering, I think it would be even better if we let the function raise a custom exception when validation failed and catch it in charm code (no exception means valid, and exception means invalid and set error state with message).",
      "parentUuid": "53140791_f922da0f",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8c0e35a_d09cd618",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 34352
      },
      "writtenOn": "2024-02-02T00:45:18Z",
      "side": 1,
      "message": "Sadly it\u0027s not fun implementing any of these patterns in python.  I miss proper types. üòû\n\nAll of these are valid patterns, and I\u0027m not sure which is best here.  I\u0027m not a fan of using exceptions here due to how we\u0027re using it.  Returning an object might be better, yes - how about I try converting it to that to see how it looks.",
      "parentUuid": "b89d7889_9ad462ea",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93294faf_9806a4d6",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 34543
      },
      "writtenOn": "2024-02-01T03:05:44Z",
      "side": 1,
      "message": "I made the suggest to improve error message in the sunbeam implementation. Can you also update the error messages in this function following the same in https://github.com/agileshaw/snap-openstack/blob/main/sunbeam-python/sunbeam/plugins/validation/plugin.py#L51-L84?",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2eae98da_89d0485a",
        "filename": "charms/tempest-k8s/src/utils/validators.py",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 34352
      },
      "writtenOn": "2024-02-01T04:13:24Z",
      "side": 1,
      "message": "Done, thanks üòä",
      "parentUuid": "93294faf_9806a4d6",
      "revId": "2f864704a3dcee82771d5afb94a6c92b7177c448",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}