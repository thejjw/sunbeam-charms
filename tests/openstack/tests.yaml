gate_bundles:
  - smoke
smoke_bundles:
  - smoke
configure:
  - zaza.sunbeam.charm_tests.k8s.setup.add_loadbalancer_annotations
  - zaza.sunbeam.charm_tests.magnum.setup.configure
  - zaza.sunbeam.charm_tests.machine.setup.deploy_machine_applications
  - zaza.sunbeam.charm_tests.keystone.setup.wait_for_all_endpoints
  - zaza.openstack.charm_tests.keystone.setup.add_tempest_roles
  - zaza.openstack.charm_tests.nova.setup.create_flavors
  - zaza.openstack.charm_tests.nova.setup.manage_ssh_key
  - zaza.openstack.charm_tests.glance.setup.add_lts_image
  - zaza.openstack.charm_tests.glance.setup.add_cirros_image
  - zaza.openstack.charm_tests.glance.setup.add_cirros_alt_image
  - zaza.sunbeam.charm_tests.neutron.setup.basic_overcloud_network
tests:
  - zaza.openstack.charm_tests.tempest.tests.TempestTestWithKeystoneMinimalNewRBAC
  - zaza.sunbeam.charm_tests.openstack_images_sync_k8s.tests.OpenStackImagesSyncK8sTest
  - zaza.sunbeam.charm_tests.api_audit.tests.AodhAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.BarbicanAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.CinderAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.DesignateAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.GlanceAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.HeatAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.MagnumAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.MasakariAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.NeutronAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.NovaAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.OctaviaAPIAuditTest
  - zaza.sunbeam.charm_tests.api_audit.tests.KeystoneAPIAuditTest
tests_options:
  trust:
    - smoke
  ignore_hard_deploy_errors:
    - smoke

  tempest:
    default:
      smoke: True
      exclude-list:
        # Needs ssh into VM
        - tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON
        - tempest.api.compute.servers.test_attach_interfaces.AttachInterfacesUnderV243Test.test_add_remove_fixed_ip
        - tempest.scenario.test_server_basic_ops.TestServerBasicOps.test_server_basic_ops
        # Needs public network connectivity
        - tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_network_basic_ops
        # TODO: Analyze this failure
        - tempest.api.object_storage.test_account_quotas.AccountQuotasTest.test_overlimit_upload
      include-list:
        - "tempest.api.identity.v3.test_application_credentials.ApplicationCredentialsV3Test.test_create_application_credential"

target_deploy_status:
  traefik:
    workload-status: active
    workload-status-message-regex: '^Serving at.*$'
  traefik-rgw:
    workload-status: active
    workload-status-message-regex: '^Serving at.*$'
  mysql:
    workload-status: active
    workload-status-message-regex: '^.*$'
  tls-operator:
    workload-status: active
    workload-status-message-regex: '^$'
  rabbitmq:
    workload-status: active
    workload-status-message-regex: '^$'
  ovn-central:
    workload-status: active
    workload-status-message-regex: '^$'
  ovn-relay:
    workload-status: active
    workload-status-message-regex: '^$'
  keystone:
    workload-status: waiting
    workload-status-message-regex: '^.*domain-config.*integration incomplete.*$|^$'
  glance:
    workload-status: active
    workload-status-message-regex: '^$'
  nova:
    workload-status: active
    workload-status-message-regex: '^$'
  placement:
    workload-status: active
    workload-status-message-regex: '^$'
  neutron:
    workload-status: active
    workload-status-message-regex: '^$'
  neutron-baremetal-config:
    workload-status: blocked
    workload-status-message-regex: '^$Config option conf-secrets needs to be set.'
  openstack-images-sync:
    workload-status: active
    workload-status-message-regex: '^$'
  vault:
    workload-status: active
    workload-status-message-regex: '^.*$'
  heat:
    workload-status: active
    workload-status-message-regex: '^.*$'
  ironic:
    workload-status: active
    workload-status-message-regex: '^.*$'
  ironic-conductor:
    workload-status: active
    workload-status-message-regex: '^.*$'
  nova-ironic:
    workload-status: active
    workload-status-message-regex: '^.*$'
  octavia:
    workload-status: active
    workload-status-message-regex: '^$'
  barbican:
    workload-status: active
    workload-status-message-regex: '^$'
  magnum:
    workload-status: blocked
    workload-status-message-regex: '^.*Configuration parameter kubeconfig not set$'
  manila:
    workload-status: waiting
    workload-status-message-regex: '^.*Not all relations are ready$'
  manila-cephfs:
    workload-status: blocked
    workload-status-message-regex: '^.*ceph-nfs.*$'
  cinder-router:
    workload-status: active
    workload-status-message-regex: '^$'
  cinder:
    workload-status: blocked
    workload-status-message-regex: '^.*storage-backend.*$'
#  cinder-ceph:
#    workload-status: blocked
#    workload-status-message-regex: '^.*ceph.*$'
  ceilometer:
    workload-status: waiting
    workload-status-message-regex: '^.*Not all relations are ready$'
  aodh:
    workload-status: active
    workload-status-message-regex: '^.*$'
  gnocchi:
    workload-status: blocked
    workload-status-message-regex: '^.*ceph.*$'
  watcher:
    workload-status: waiting
    workload-status-message-regex: '^.*integration incomplete$'
  ldap-server:
    workload-status: active
    workload-status-message-regex: '^$'
  designate-bind:
    workload-status: active
    workload-status-message-regex: '^.*$'
  designate:
    workload-status: active
    workload-status-message-regex: '^.*$'
  keystone-ldap:
    workload-status: active
    workload-status-message-regex: '^$'
  openstack-exporter:
    workload-status: active
    workload-status-message-regex: '^$'
  horizon:
    workload-status: active
    workload-status-message-regex: '^$'
  masakari:
    workload-status: active
    workload-status-message-regex: '^$'
  consul:
    workload-status: active
    workload-status-message-regex: '^$'
  cloudkitty:
    workload-status: waiting
    workload-status-message-regex: '^.*Not all relations are ready$'
